name: Release

on:
  push:
    paths:
      - 'CHANGELOG.md'
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Get version from CHANGELOG
        id: version
        run: |
          VERSION=$(grep -m 1 '## \[.*\]' CHANGELOG.md | sed -E 's/## \[(.*)\].*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/${{ steps.version.outputs.version }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Go
        if: steps.check_tag.outputs.exists == 'false'
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        if: steps.check_tag.outputs.exists == 'false'
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          make build-all

      - name: Generate Release Notes
        if: steps.check_tag.outputs.exists == 'false'
        id: release_notes
        run: |
          make release-notes > release_notes.txt

      - name: Create Release
        if: steps.check_tag.outputs.exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.version.outputs.version }}
          gh release create "$VERSION" \
            bin/cursor-fake-darwin-amd64 \
            bin/cursor-fake-darwin-arm64 \
            bin/cursor-fake-linux-amd64 \
            bin/cursor-fake-windows-amd64.exe \
            --title "Release $VERSION" \
            --notes-file release_notes.txt \
            --target main 